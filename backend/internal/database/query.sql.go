// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: query.sql

package database

import (
	"context"
)

const getStudent = `-- name: GetStudent :one
SELECT id, name, email
FROM Students
WHERE id = $1
LIMIT 1
`

func (q *Queries) GetStudent(ctx context.Context, id string) (Student, error) {
	row := q.db.QueryRow(ctx, getStudent, id)
	var i Student
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}

const listStudents = `-- name: ListStudents :many
SELECT id, name, email
FROM Students
ORDER BY id
`

func (q *Queries) ListStudents(ctx context.Context) ([]Student, error) {
	rows, err := q.db.Query(ctx, listStudents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Student
	for rows.Next() {
		var i Student
		if err := rows.Scan(&i.ID, &i.Name, &i.Email); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
