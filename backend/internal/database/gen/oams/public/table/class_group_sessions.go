//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ClassGroupSessions = newClassGroupSessionsTable("public", "class_group_sessions", "class_group_session")

type classGroupSessionsTable struct {
	postgres.Table

	// Columns
	ID           postgres.ColumnInteger
	ClassGroupID postgres.ColumnInteger
	StartTime    postgres.ColumnTimestampz
	EndTime      postgres.ColumnTimestampz
	Venue        postgres.ColumnString
	CreatedAt    postgres.ColumnTimestampz
	UpdatedAt    postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ClassGroupSessionsTable struct {
	classGroupSessionsTable

	EXCLUDED classGroupSessionsTable
}

// AS creates new ClassGroupSessionsTable with assigned alias
func (a ClassGroupSessionsTable) AS(alias string) *ClassGroupSessionsTable {
	return newClassGroupSessionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClassGroupSessionsTable with assigned schema name
func (a ClassGroupSessionsTable) FromSchema(schemaName string) *ClassGroupSessionsTable {
	return newClassGroupSessionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ClassGroupSessionsTable with assigned table prefix
func (a ClassGroupSessionsTable) WithPrefix(prefix string) *ClassGroupSessionsTable {
	return newClassGroupSessionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ClassGroupSessionsTable with assigned table suffix
func (a ClassGroupSessionsTable) WithSuffix(suffix string) *ClassGroupSessionsTable {
	return newClassGroupSessionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newClassGroupSessionsTable(schemaName, tableName, alias string) *ClassGroupSessionsTable {
	return &ClassGroupSessionsTable{
		classGroupSessionsTable: newClassGroupSessionsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newClassGroupSessionsTableImpl("", "excluded", ""),
	}
}

func newClassGroupSessionsTableImpl(schemaName, tableName, alias string) classGroupSessionsTable {
	var (
		IDColumn           = postgres.IntegerColumn("id")
		ClassGroupIDColumn = postgres.IntegerColumn("class_group_id")
		StartTimeColumn    = postgres.TimestampzColumn("start_time")
		EndTimeColumn      = postgres.TimestampzColumn("end_time")
		VenueColumn        = postgres.StringColumn("venue")
		CreatedAtColumn    = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn    = postgres.TimestampzColumn("updated_at")
		allColumns         = postgres.ColumnList{IDColumn, ClassGroupIDColumn, StartTimeColumn, EndTimeColumn, VenueColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns     = postgres.ColumnList{ClassGroupIDColumn, StartTimeColumn, EndTimeColumn, VenueColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return classGroupSessionsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		ClassGroupID: ClassGroupIDColumn,
		StartTime:    StartTimeColumn,
		EndTime:      EndTimeColumn,
		Venue:        VenueColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
