//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type RuleType string

const (
	RuleType_Consecutive RuleType = "CONSECUTIVE"
	RuleType_Percentage  RuleType = "PERCENTAGE"
	RuleType_Advanced    RuleType = "ADVANCED"
)

func (e *RuleType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "CONSECUTIVE":
		*e = RuleType_Consecutive
	case "PERCENTAGE":
		*e = RuleType_Percentage
	case "ADVANCED":
		*e = RuleType_Advanced
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for RuleType enum")
	}

	return nil
}

func (e RuleType) String() string {
	return string(e)
}
