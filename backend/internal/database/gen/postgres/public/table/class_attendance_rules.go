//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ClassAttendanceRules = newClassAttendanceRulesTable("public", "class_attendance_rules", "class_attendance_rule")

type classAttendanceRulesTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnInteger
	ClassID     postgres.ColumnInteger
	Title       postgres.ColumnString
	Description postgres.ColumnString
	Rule        postgres.ColumnString
	Environment postgres.ColumnString
	CreatedAt   postgres.ColumnTimestampz
	UpdatedAt   postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ClassAttendanceRulesTable struct {
	classAttendanceRulesTable

	EXCLUDED classAttendanceRulesTable
}

// AS creates new ClassAttendanceRulesTable with assigned alias
func (a ClassAttendanceRulesTable) AS(alias string) *ClassAttendanceRulesTable {
	return newClassAttendanceRulesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClassAttendanceRulesTable with assigned schema name
func (a ClassAttendanceRulesTable) FromSchema(schemaName string) *ClassAttendanceRulesTable {
	return newClassAttendanceRulesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ClassAttendanceRulesTable with assigned table prefix
func (a ClassAttendanceRulesTable) WithPrefix(prefix string) *ClassAttendanceRulesTable {
	return newClassAttendanceRulesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ClassAttendanceRulesTable with assigned table suffix
func (a ClassAttendanceRulesTable) WithSuffix(suffix string) *ClassAttendanceRulesTable {
	return newClassAttendanceRulesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newClassAttendanceRulesTable(schemaName, tableName, alias string) *ClassAttendanceRulesTable {
	return &ClassAttendanceRulesTable{
		classAttendanceRulesTable: newClassAttendanceRulesTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newClassAttendanceRulesTableImpl("", "excluded", ""),
	}
}

func newClassAttendanceRulesTableImpl(schemaName, tableName, alias string) classAttendanceRulesTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		ClassIDColumn     = postgres.IntegerColumn("class_id")
		TitleColumn       = postgres.StringColumn("title")
		DescriptionColumn = postgres.StringColumn("description")
		RuleColumn        = postgres.StringColumn("rule")
		EnvironmentColumn = postgres.StringColumn("environment")
		CreatedAtColumn   = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn   = postgres.TimestampzColumn("updated_at")
		allColumns        = postgres.ColumnList{IDColumn, ClassIDColumn, TitleColumn, DescriptionColumn, RuleColumn, EnvironmentColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns    = postgres.ColumnList{ClassIDColumn, TitleColumn, DescriptionColumn, RuleColumn, EnvironmentColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return classAttendanceRulesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		ClassID:     ClassIDColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,
		Rule:        RuleColumn,
		Environment: EnvironmentColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
