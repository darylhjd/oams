# This workflow executes all tests in OAMS.

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-all:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.2-bullseye
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: oams-tester
          POSTGRES_PASSWORD: oams-test
        ports:
          - 32769:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.work
          cache-dependency-path: backend/go.sum

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.1'
          channel: 'stable'
          cache: true

      - name: Configuration for private dependencies
        env:
          GOPRIVATE: "github.com/darylhjd/*"
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://darylhjd:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Install Go dependencies
        run: |
          cd backend  
          go get ./...

      - name: Build frontend
        run: |
          cd frontend
          flutter pub get
          flutter build web

      - name: Test backend
        env:
          APP_ENV: ${{ vars.APP_ENV }}
          API_SERVER_PORT: ${{ vars.API_SERVER_PORT }}
          API_SERVER_AZURE_TENANT_ID: ${{ vars.API_SERVER_AZURE_TENANT_ID }}
          API_SERVER_AZURE_CLIENT_ID: ${{ vars.API_SERVER_AZURE_CLIENT_ID }}
          API_SERVER_AZURE_CLIENT_SECRET: ${{ vars.API_SERVER_AZURE_CLIENT_SECRET }}
          API_SERVER_AZURE_LOGIN_SCOPE: ${{ vars.API_SERVER_AZURE_LOGIN_SCOPE }}
          API_SERVER_AZURE_LOGIN_CALLBACK_URL: ${{ vars.API_SERVER_AZURE_LOGIN_CALLBACK_URL }}
          WEB_SERVER_PORT: ${{vars.WEB_SERVER_PORT }}
          DATABASE_TYPE: ${{ vars.DATABASE_TYPE }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_SSL_MODE: ${{ vars.DATABASE_SSL_MODE }}
        run: |
          cd backend
          go test ./...